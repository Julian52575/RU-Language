name: "Create Release"
on:
  push:
    Interpretor-release

env:
  PROJECT_FOLDER: test
  RELEASE_NAME: interpretor
  BINARY_NAME: my-lisp-interpretor-exe

jobs:
  get_date:
    runs-on: ubuntu-latest
    outputs:
      date_abr: ${{ steps.getdate.outputs.date_abr }}
    steps:
      - name: Get Date
        id: getdate
        run: |
          date_abr=$(date +"%F-%H%M")
          echo "date_abr=${date_abr}" >> $GITHUB_OUTPUT
  create_release:
    runs-on: ubuntu-latest
    needs: get_date
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build binary
        run: make re
    
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.get_date.outputs.date_abr }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.RELEASE_NAME }}-${{ env.VERSION }}
          body: |
            Functional release of the lisp interpretor.
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ env.BINARY_NAME }}
          asset_name: ${{ env.BINARY_NAME }}
          asset_content_type: application/exe




  #create_release:
  #  runs-on: ubuntu-latest
  #  needs: get_date
  #  steps:
  #    - name: create-release
  #      env:
  #        VERSION: ${{ needs.get_date.outputs.date_abr }}
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #      uses: actions/create-release@v1.1.4
  #      with:
  #        tag_name: ${{ env.VERSION }}
  #        release_name: Release ${{ env.VERSION }}
  #        body: |
  #          Automatically created release for Interpretor.
  #        draft: false
  #        prerelease: false
