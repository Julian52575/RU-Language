name: GladOS actions
on:
  push: 
    branches:
      - dev

env:
  REPO: git@github.com:Julian52575/Private_Glados.git
  BRANCH: main # The branch name where you want to push the assets
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
  SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
  MESSAGE: "({sha}) {msg}" # The commit message
  FOLDER: . # The directory where your assets are generated

defaults:
  run:
    shell: bash


jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
  
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: my-coding-style-checker
        run: |
          check.sh $(pwd) $(pwd)
          file="coding-style-reports.log"
          if [  $(wc -c $file | awk '{print $1}') == 0 ]
          then
            exit 0
          fi
          while read -r line
          do
            echo "::error::$line"
          done < "$file"
          exit 84

  check_program_compilation:
    runs-on: ubuntu-latest
    container: 
      image: epitechcontent/epitest-docker

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: ./.check_compilation.sh
        timeout-minutes: 5
  
  run_tests:
    runs-on: ubuntu-latest
    container:
      image:  epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - run: ./run_tests.sh
        timeout-minutes: 2

  push_to_mirror:
    needs: 
      -  run_tests
      -  check_program_compilation
      -  check_coding_style
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
        # The "cleanup old checkout" step is needed because of this bug: https://github.com/actions/checkout/issues/1014
        - uses: actions/checkout@v4
        #- name: set ssh-key
         # run: |
           # git config user.name "Julian52575"
          #  git config user.email ${{ secrets.OWNER_EMAIL }}
            #echo "${{ secrets.SSH_KEY }}" >> ssh.ssh
            #chmod 600 ssh.ssh
            #eval `ssh-agent -s`
            #ssh-add ssh.ssh
        
        - name: push to main
          run: |
            git checkout -b another_branch
            git merge dev
            git reset HEAD .github/workflows
            git push --force origin another_branch
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
            
          
