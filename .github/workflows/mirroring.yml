name: GladOS actions
on:
  push: 
    branches:
      - main

env:
  MIRROR_URL: git@github.com:EpitechPromo2027/B-FUN-500-NCY-5-1-glados-julian.bottiglione.git
  SELF_TARGET_BRANCH: release

defaults:
  run:
    shell: bash

jobs:
  check_program_compilation:
    runs-on: ubuntu-latest
    container: 
      image: epitechcontent/epitest-docker

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: ./.check_compilation.sh
        timeout-minutes: 5
  
  run_tests:
    runs-on: ubuntu-latest
    container:
      image:  epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - run: ./run_tests.sh
        timeout-minutes: 2

  mirror:
    runs-on: ubuntu-latest
    needs:
      -  run_tests
      -  check_program_compilation
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history is fetched
      - name: add ssh-key
        run: |
          echo "${{ secrets.SSH_KEY }}" >> ssh.ssh
          chmod 600 ssh.ssh
          eval `ssh-agent -s`
          ssh-add ssh.ssh
      - name: Configure sparse checkout to exclude .github/workflows
        run: |
          git remote add origin-source ${{ env.MIRROR_URL }}
          git fetch origin-source
          
          # Enable sparse-checkout
          git config core.sparseCheckout true
          
          # Specify files to include (use ! to exclude)
          echo '/*' > .git/info/sparse-checkout
          echo '!/.github/workflows' >> .git/info/sparse-checkout
          
          # Perform the checkout
          git checkout main
      - name: Push to the target repository
        run: |
          git remote add origin-destination ${{ env.MIRROR_URL }}
          git push origin-destination main

  push_to_relese_branch:
    runs-on: ubuntu-latest
    needs:
      -  run_tests
      -  check_program_compilation
    if: ${{ github.event_name == 'push' }}
    steps:
        - uses: actions/checkout@v4
        - name: push to release
          run: |
            rm .github/workflows/*
            git checkout -b ${{ env.SELF_TARGET_BRANCH }}
            git merge main --no-commit --no-ff
            git reset HEAD .github/workflows/
            git push --force origin ${{ env.SELF_TARGET_BRANCH }}


